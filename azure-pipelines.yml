trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
  demands: npm

variables:
  ArtifactName: drop
  ArtifactPath: $(Pipeline.Workspace)/$(ArtifactName)

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: Prod
    displayName: Prod
    steps:
    - task: Bash@3
      displayName: Print environment variables
      inputs:
        targetType: inline
        script: 'env | sort'

    - task: Npm@1
      displayName: 'npm install'
      inputs:
        verbose: false

    - task: Npm@1
      displayName: 'npm run build:prod'
      inputs:
        command: custom
        verbose: false
        customCommand: 'run build:prod'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: dist

- stage: Deploy
  displayName: Deploy
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - job: Prod
    displayName: Prod
    steps:
    - task: Bash@3
      displayName: Print environment variables
      inputs:
        targetType: inline
        script: 'env | sort'

    - task: DownloadPipelineArtifact@2
      inputs:
        artifactName: drop

    - task: FtpUpload@1
      displayName: 'FTP Upload: $(ArtifactName)'
      inputs:
        credentialsOption: inputs
        serverUrl: $(FtpServerUrl)
        username: $(FtpUsername)
        password: $(FtpPassword)
        rootDirectory: $(ArtifactName)
        remoteDirectory: /webapp/build/
        clean: true
        preservePaths: true
        trustSSL: true
